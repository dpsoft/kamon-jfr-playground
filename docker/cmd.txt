
kafka-topics  --bootstrap-server localhost:9092 --list
kafka-topics --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic jfr-events
kafka-console-consumer --bootstrap-server localhost:9092 --topic transcript-topic --from-beginning

docker exec -t kamon-jrf-playground_kafka_1  kafka-topics --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic topic-test
docker exec -t kamon-jrf-playground_kafka_1  kafka-topics --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic transcript-topic
docker exec -t kamon-jrf-playground_kafka_1  kafka-topics  --bootstrap-server localhost:9092 --list

docker exec -t kamon-jrf-playground_kafka_1  kafka-console-producer --broker-list localhost:9092 --topic transcript-topic {"studentID":205,"firstName":"Diego","lastName":"Parra","gender":"Male","subject":"Maths","score":1.8,"timestamp":1571900400000}
docker exec -t kamon-jrf-playground_kafka_1  kafka-console-consumer --bootstrap-server localhost:9092 --topic transcript-topic --from-beginning

echo {"studentID":205,"firstName":"Natalie","lastName":"Jones","gender":"Female","subject":"Maths","score":3.8,"timestamp":1571900400000} | kafka-console-producer --broker-list localhost:9092 --topic transcript-topic


curl -X POST "http://localhost:9000/schemas?override=true" -H "accept: application/json" -H "Content-Type: application/json" -d @jfr-allocation-schema.json
curl -X POST "http://localhost:9000/tables" -H "accept: application/json" -H "Content-Type: application/json" -d @jfr-object-allocation-table.json



select sum(weight) summed_weight, stackTrace, threadName
from "jfr-object-allocation"
--where startTime > 2890793781
--group by stackTrace, threadName
--order by summed_weight desc
limit 10


select JSON_EXTRACT_SCALAR(stackTrace, '$[*]', 'STRING')
from "jfr-object-allocation"
where className <> 'null'
limit 10

select sum(weight) summed_weight, stackTrace
from "jfr-object-allocation"
where className is not null
group by stackTrace
order by sum(weight) desc
limit 100

curl 'http://localhost:9000/sql' \
  --data-raw $'{"sql":"select weight, className as class_name, threadName as thread, stackTrace as stack_trace \\nfrom \\"jfr-object-allocation\\"\\nwhere class_name <> \'null\'\\norder by weight desc\\nlimit 100","trace":false}' \
  --compressed | jq