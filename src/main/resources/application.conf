# ======================================= #
#    kamon-jfr Reference Configuration    #
# ======================================= #

kamon { 
    jfr {
        config  = [
            "jdk.CPULoad#enabled=true",
            "jdk.CPULoad#period=1000 ms",
            "jdk.ObjectAllocationInNewTLAB#enabled=false",
            "jdk.ObjectAllocationOutsideTLAB#enabled=false",
            "jdk.SafepointBegin#enabled=true",
            "jdk.SafepointBegin#threshold=0 ms"
            "jdk.SafepointEnd#enabled=true",
            "jdk.PhysicalMemory#enabled=true",
            "jdk.PhysicalMemory#period=everyChunk",
            "jdk.ContainerMemoryUsage#enabled=true",
            "jdk.ContainerMemoryUsage#period=30 s",
            "jdk.ContainerCPUUsage#enabled=true",
            "jdk.ContainerCPUUsage#period=30 s",
            "jdk.JavaThreadStatistics#enabled=true",
            "jdk.JavaThreadStatistics#period=1000 ms",
            "jdk.ExecutionSample#enabled=false",
            "jdk.ExecutionSample#period=9 ms",
            "jdk.NetworkUtilization#enabled=true",
            "jdk.NetworkUtilization#period=5 s",
            "jdk.ObjectAllocationSample#enabled=false",
            "jdk.ObjectAllocationSample#stackTrace=true",
            "jdk.ObjectAllocationSample#throttle=150/s",
            "jdk.GarbageCollection#enabled=true",
            "jdk.GarbageCollection#threshold=0 ms",
            "jdk.ClassLoadingStatistics#enabled=true",
            "jdk.ClassLoadingStatistics#period=1000 ms"
        ]
    }

    modules {
      jfr {
        enabled = yes
        name = "JFR Metrics"
        description = "Collects JFR metrics on CPU, Memory, Network and Storage usage"
        factory = "io.kamon.jfr.KamonJfr$Factory"
        interval = 10 second
      }
    }
}
